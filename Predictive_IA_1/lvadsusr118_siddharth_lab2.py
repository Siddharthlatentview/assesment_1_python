# -*- coding: utf-8 -*-
"""LVADSUSR118_siddharth_lab2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AzGV1mtSO67xmh_P-384d6hK8PTdpDXf
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score,precision_score,recall_score,f1_score,confusion_matrix
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import LabelEncoder


df = pd.read_csv('booking.csv')

df.describe()

df.info()
df.dropna()
df.drop_duplicates()

sns.boxplot(df)

label_encoder = LabelEncoder()

df['type of meal']=label_encoder.fit_transform(df['type of meal'])
df['room type']=label_encoder.fit_transform(df['room type'])
df['booking status']=label_encoder.fit_transform(df['booking status'])
df['market segment type']=label_encoder.fit_transform(df['market segment type'])

df = df.drop(columns=['Booking_ID'])
df = df.drop(columns=['date of reservation'])

df.head()

X = df.drop('booking status', axis=1)
y = df['booking status']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


model = DecisionTreeClassifier()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)


accuracy = accuracy_score(y_test, y_pred)
precision = precision_score(y_test, y_pred)
recall = recall_score(y_test, y_pred)
f1=f1_score(y_test, y_pred)
print("Accuracy:", accuracy)
print("Precision:", precision)
print("Recall:", recall)
print("F1 score:",f1)
print(confusion_matrix(y_test, y_pred))


# we can predict the booking status using our decision tree classifier. our model performs fairly well.