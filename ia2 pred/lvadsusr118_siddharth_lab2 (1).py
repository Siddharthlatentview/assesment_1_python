# -*- coding: utf-8 -*-
"""LVADSUSR118_siddharth_lab2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12ug6_ZpObRt-BzZRXBT72N0Zq37s8gf-
"""

import pandas as pd
import numpy as np
import seaborn as sns
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import LabelEncoder
from sklearn.preprocessing import StandardScaler
import pandas as pd
from sklearn.cluster import KMeans

df=pd.read_csv('/content/Mall_Customers.csv')
df.head()

df.info()

df['Annual Income (k$)'].fillna(df['Annual Income (k$)'].mean(), inplace = True)

df.info()

df['ratio']=df['Spending Score (1-100)']/df['Annual Income (k$)']

df.head()

df['Gender'] = df['Gender'].map({'Male':0,'Female':1}).astype(int)

scaler = StandardScaler()
scaled_data = scaler.fit_transform(df)

# Plotting Elbow Curve to determine the number of clusters
inertia = []
for i in range(1, 20):
    kmeans = KMeans(n_clusters=i, random_state=0)
    kmeans.fit(scaled_data)
    inertia.append(kmeans.inertia_)
plt.plot(range(1, 20), inertia, marker='o')
plt.xlabel('Number of clusters')
plt.ylabel('Inertia')
plt.title('Elbow Curve')
plt.show()

# Choosing the optimal number of clusters
optimal_clusters =10 # Choosing based on elbow method

# K-Means Clustering
kmeans = KMeans(n_clusters=optimal_clusters, random_state=0)
clusters = kmeans.fit_predict(scaled_data)

# Plotting Clusters
plt.scatter(df['Annual Income (k$)'],df['Spending Score (1-100)'], c=clusters, cmap='viridis')
plt.xlabel('Income')
plt.ylabel('Spend')
plt.title('Clustering Result')
plt.show()

from sklearn.metrics import silhouette_score

silhouette_score_value = silhouette_score(scaled_data, clusters)

print(f"Silhouette Score: {silhouette_score_value}")