# -*- coding: utf-8 -*-
"""LVADSUSR118-Siddharth-IA2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GiIXTPVcYVETZ3YD6QgEldXWobWysIn6
"""

#1
import pandas as pd
import numpy as np

#2
import numpy as np

data = np.array([
    [170, 65, 30],
    [180, 70, 35],
    [160, 60, 25]
])


def normalize(data):
    mean = np.mean(data, axis=0)
    std_dev = np.std(data, axis=0)
    normalized_data = (data - mean) / std_dev
    return normalized_data

normalized_data = normalize(data)

print("The original data is:")
print(data)
print("\nNormalized data :")
print(normalized_data)

#3

import numpy as np

sensor = np.array([
    [85, 90, 92, 88, 87],
    [78, 80, 82, 84, 85],
    [90, 88, 86, 84, 82],
    [92, 91, 93, 95, 94]
])


f=sensor.flatten()
print(f)

#4
import numpy as np

scores = np.array([
    [85, 90, 92, 88, 87],  # Athlete 1
    [78, 80, 82, 84, 85],  # Athlete 2
    [90, 88, 86, 84, 82],  # Athlete 3
    [92, 91, 93, 95, 94]   # Athlete 4
])


first_game_scores = scores[:, 0]
last_game_scores = scores[:, -1]

improv = ((last_game_scores - first_game_scores)/first_game_scores)*100

print("Scores:")
print(scores)

print("\nImprovement in first and last game in % is:")
for i in range(len(improv)):
    print(f"Athlete {i+1}: {improv[i]}")

#5
def calculateaverages(marks):
    student_averages = []

    for student_marks in marks:
        v_marks = [mark for mark in student_marks[-3:] if mark != -1]
        if v_marks:
            average = sum(v_marks) / len(v_marks)
            student_averages.append(average)
        else:
            student_averages.append(0)
    return student_averages

student_marks = [
    [81, 75, 85, 90, 92],
    [67, 70, -1, 75, 80],
    [85, 90, 88, -1, 92],
    [70, 73, 78, 80, 85]
]

student_averages = calculateaverages(student_marks)
for i, average in enumerate(student_averages):
    print(f"Student {i+1}:The Average of last three subjects: {average:.2f}")

#7
import pandas as pd

data={'Name':['Alice','Bob','Charlie','David','Eve','Frank','Grace'],
      'Age':[25,30,35,40,45,50,55],'City':['New York','Los Angeles','Chicago','Houston','Phoenix','Miami','Boston'],'Department':['HR','IT','Finance','Marketing','Sales','IT','HR']}


df=pd.DataFrame(data)
a=df[df['Age']>45]
b=a[a['Department']!='HR']
print(b)

#8
import pandas as pd

data={'Product':['Apples','Bananas','Cherries','Dates','Elderberrries','Flour','Grape'],
      'Category':['Fruit','Fruit','Fruit','Fruit','Fruit','Bakery','Fruit'],'Price':[1.20,0.50,3.00,2.50,4.00,1.50,2.00],
      'Promotion':[True,False,True,True,False,True,False]}


df=pd.DataFrame(data)
a= df.groupby('Category').agg('mean')
a
b=df[df['Price']>a]
b

#9
import pandas as pd

Employee_data={'Employee':['Alice','Bob','Charlie','David'],
      'Department':['HR','IT','Finance','IT'],'Manager':['John','Rachel','Emily','Rachel']}


Project_data={'Employee':['Alice','Charlie','Eve'],
      'Project':['P1','P3','P2']}



df1=pd.DataFrame(Employee_data)
df2=pd.DataFrame(Project_data)
df3=pd.merge(df1,df2,on='Employee',how='left')
print(df3)

#10
import pandas as pd
data={'Department':['Electronics','Electronics','Clothing','Clothing','Home Goods'],
      'Salesperson':['Alice','Bob','Charlie','David','Eve'],'Sales':[70000,50000,30000,40000,60000]}

df1=pd.DataFrame(data)
a=df1.groupby(['Department','Salesperson'])['Sales'].agg('mean')
print("\n Sales for each person \n", a)


d = df1.groupby('Department')['Sales'].mean()

d = d.sort_values(ascending=False)

print("\n Ranking of departments based on average sales:\n ")
print(d)